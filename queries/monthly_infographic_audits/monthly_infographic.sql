-- Last Edits: 9/24/2024

WITH QA_BASE_1 AS (
    SELECT *
    FROM FLIK_ANALYTICS.CURIOSITY.SURVEYS_COMBINED
    WHERE (UNIT_BUSINESS_PORTFOLIO <> 'Test' or UNIT_BUSINESS_PORTFOLIO is null)  -- Excludes 'test' portfolios but includes 'null' portfolios
    AND SURVEY_ID = 'SV_cBggdZ7uWwWjmgl' -- Include only QA survey
    AND UNIT_SAP_NUMBER NOT IN ('1', '4440', '33940') -- Removes test accounts
    AND RESPONSE_VALID = 'Yes' -- Only valid responses
    AND ISGOLDLISTACTIVE = TRUE -- Only active accounts
)

-- QA Monthly Audit Count by SDDR
, QA_M1 AS (
    SELECT  HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS AS SCOTT_DAVIS_DIRECT_REPORTS, 1 AS METRIC_ID, YEAR(AUDIT_DATE) AS YR, MONTH(AUDIT_DATE) AS MO, COUNT(DISTINCT RESPONSE_ID) AS STATISTIC
    FROM QA_BASE_1
    GROUP BY SCOTT_DAVIS_DIRECT_REPORTS, YR, MO
    ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS
)

-- QA Monthly Unit Count by SDDR
, QA_M2 AS (
    SELECT  HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS AS SCOTT_DAVIS_DIRECT_REPORTS, 2 AS METRIC_ID, YEAR(AUDIT_DATE) AS YR, MONTH(AUDIT_DATE) AS MO, COUNT(DISTINCT UNIT_SAP_NUMBER) AS STATISTIC
    FROM QA_BASE_1
    GROUP BY SCOTT_DAVIS_DIRECT_REPORTS, YR, MO
    ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS
)


-- Last Edits: 9/24/2024

, QA_BASE_2 AS (
SELECT *
FROM FLIK_ANALYTICS.CURIOSITY.SURVEYS_COMBINED
WHERE (UNIT_BUSINESS_PORTFOLIO <> 'Test' or UNIT_BUSINESS_PORTFOLIO is null)  -- Excludes 'test' portfolios but includes 'null' portfolios
AND SURVEY_ID = 'SV_cBggdZ7uWwWjmgl' -- Include only QA survey
AND UNIT_SAP_NUMBER NOT IN ('1', '4440', '33940') -- Removes test accounts
AND RESPONSE_VALID = 'Yes' -- Only valid responses
AND ISGOLDLISTACTIVE = TRUE -- Only active accounts
AND CATEGORY = 'Total Score' AND CATEGORY_SCORE_ID = 'PercentScore' -- Only total score
)


-- QA Monthly Average Audit Score by SDDR
, QA_M3 AS (
SELECT  HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS AS SCOTT_DAVIS_DIRECT_REPORTS, 3 AS METRIC_ID, YEAR(AUDIT_DATE) AS YR, MONTH(AUDIT_DATE) AS MO, ROUND(AVG(CATEGORY_SCORE),2) AS STATISTIC
FROM QA_BASE_2
GROUP BY SCOTT_DAVIS_DIRECT_REPORTS, YR, MO
ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS
)


-- QA Monthly Audit Count & Percentage of units that failed by SDDR
, QA_BASE_M4_M5 AS (
SELECT  HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS AS SCOTT_DAVIS_DIRECT_REPORTS,  YEAR(AUDIT_DATE) AS YR, MONTH(AUDIT_DATE) AS MO,
COUNT(CASE WHEN CATEGORY_SCORE < 90 THEN 1 END) AS COUNT_BELOW_90, -- Count of audits below 90
ROUND((COUNT(CASE WHEN CATEGORY_SCORE < 90 THEN 1 END) / COUNT(CATEGORY_SCORE)), 2) AS PERCENTAGE_BELOW_90 -- Percentage of audits below 90
FROM QA_BASE_2
GROUP BY SCOTT_DAVIS_DIRECT_REPORTS, YR, MO
ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS
)
-- Count of failed audits
, QA_M4_M5 AS (
    (SELECT SCOTT_DAVIS_DIRECT_REPORTS, 4 AS METRIC_ID, YR, MO, COUNT_BELOW_90 AS STATISTIC
    FROM QA_BASE_M4_M5
    UNION ALL
    -- Percentage of failed audits
    SELECT SCOTT_DAVIS_DIRECT_REPORTS, 5 AS METRIC_ID, YR, MO, PERCENTAGE_BELOW_90 AS STATISTIC
    FROM QA_BASE_M4_M5)
    ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS
)

-- Last Edits: 9/23/2024

, CTE_BASE_3 AS (
    SELECT *
    FROM FLIK_ANALYTICS.CURIOSITY.SURVEYS_COMBINED
    WHERE (UNIT_BUSINESS_PORTFOLIO <> 'Test' or UNIT_BUSINESS_PORTFOLIO is null)  -- Excludes 'test' portfolios but includes 'null' portfolios
    AND SURVEY_ID = 'SV_cBggdZ7uWwWjmgl' -- Include only QA survey
    AND UNIT_SAP_NUMBER NOT IN ('1', '4440', '33940') -- Removes test accounts
    AND RESPONSE_VALID = 'Yes' -- Only valid responses
    AND ISGOLDLISTACTIVE = TRUE -- Only active accounts
    AND DATATYPE = 'Tickets' -- Only tickets
)

-- QA Monthly Closed Ticket Count by SDDR
, QA_M6 AS (
    SELECT HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS AS SCOTT_DAVIS_DIRECT_REPORTS, 6 AS METRIC_ID, YEAR(TICKET_CREATION_DATE_EST) AS YR, MONTH(TICKET_CREATION_DATE_EST) AS MO, COUNT(TICKET_ID) AS STATISTIC
    FROM CTE_BASE_3
    WHERE TICKET_STATUS = 'Closed' -- Only closed tickets
    GROUP BY HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS, YR, MO
    ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS
)

-- QA Monthly Avg Time to Closed Tickets by SDDR
, QA_M7 AS (
    SELECT HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS AS SCOTT_DAVIS_DIRECT_REPORTS, 7 AS METRIC_ID, YEAR(TICKET_CREATION_DATE_EST) AS YR, MONTH(TICKET_CREATION_DATE_EST) AS MO, ROUND(AVG(TICKET_DAYS_TO_CLOSE), 2) AS STATISTIC
    FROM CTE_BASE_3
    WHERE TICKET_STATUS = 'Closed' -- Only closed tickets
    GROUP BY HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS, YR, MO
    ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS
)

-- Count of Types of Missed QA Questions by SDDR
, QA_M13_M14_M15 AS (
SELECT HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS AS SCOTT_DAVIS_DIRECT_REPORTS,
CASE WHEN FOLLOW_UP_QUESTION_RESPONSE LIKE '%(MINOR)%' THEN 13
WHEN FOLLOW_UP_QUESTION_RESPONSE LIKE '%(MAJOR)%' THEN 14
WHEN FOLLOW_UP_QUESTION_RESPONSE LIKE '%(CRITICAL)%' THEN 15
END AS METRIC_ID, YEAR(AUDIT_DATE) AS YR, MONTH(AUDIT_DATE) AS MO,
COUNT(METRIC_ID) AS STATISTIC
FROM FLIK_ANALYTICS.CURIOSITY.SURVEYS_COMBINED
WHERE (UNIT_BUSINESS_PORTFOLIO <> 'Test' or UNIT_BUSINESS_PORTFOLIO is null)  -- excludes 'test' portfolios but includes 'null' portfolios
AND SURVEY_ID = 'SV_cBggdZ7uWwWjmgl' -- Include only QA survey
AND UNIT_SAP_NUMBER NOT IN ('1', '4440', '33940') -- removes test B&I account & Insights test accounts
AND RESPONSE_VALID = 'Yes' -- Only valid responses
AND DATATYPE = 'Responses' -- Only responses
AND QUESTION_TYPE = 'MC' -- Only multiple choice questions
AND METRIC_ID IS NOT NULL -- Only questions with (MINOR), (MAJOR), or (CRITICAL) in the response
AND ISGOLDLISTACTIVE = TRUE -- Only active accounts
AND QUESTION_TEXT <> 'Reason for selecting NO' -- Excludes the 'Reason for selecting NO' question
GROUP BY HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS, YR, MO, METRIC_ID
ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS, METRIC_ID
)

-- Last Edits: 9/23/2024

-- Base Query to pull all QA data relating to failed units

-- Table of failed QA audits
, QA_BASE_FAIL_1 AS (
    SELECT RESPONSE_ID, UNIT_SAP_NUMBER, HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS AS SCOTT_DAVIS_DIRECT_REPORTS, YEAR(AUDIT_DATE) AS YR, MONTH(AUDIT_DATE) AS MO,
    ROUND(AVG(CATEGORY_SCORE),2) AS SCORE,
    CASE WHEN SCORE < 90 THEN 'FAIL'
    ELSE 'PASS'
    END AS "PASS_FAIL"
    FROM FLIK_ANALYTICS.CURIOSITY.SURVEYS_COMBINED
    WHERE (UNIT_BUSINESS_PORTFOLIO <> 'Test' or UNIT_BUSINESS_PORTFOLIO is null)  -- Excludes 'test' portfolios but includes 'null' portfolios
    AND SURVEY_ID = 'SV_cBggdZ7uWwWjmgl' -- Include only QA survey
    AND UNIT_SAP_NUMBER NOT IN ('1', '4440', '33940') -- Removes test accounts
    AND RESPONSE_VALID = 'Yes' -- Only valid responses
    AND ISGOLDLISTACTIVE = TRUE -- Only active accounts
    AND CATEGORY = 'Total Score' AND CATEGORY_SCORE_ID = 'PercentScore' -- Only total score
    GROUP BY RESPONSE_ID, UNIT_SAP_NUMBER, HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS, YR, MO
    ORDER BY YR DESC, MO DESC, HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS

)

, QA_BASE_TICKETS AS (
SELECT HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS AS SCOTT_DAVIS_DIRECT_REPORTS, UNIT_SAP_NUMBER, YEAR(TICKET_CREATION_DATE_EST) AS YR, MONTH(TICKET_CREATION_DATE_EST) AS MO, COUNT(TICKET_ID) AS CLOSED_TICKETS
FROM FLIK_ANALYTICS.CURIOSITY.SURVEYS_COMBINED
WHERE (UNIT_BUSINESS_PORTFOLIO <> 'Test' or UNIT_BUSINESS_PORTFOLIO is null)  -- Excludes 'test' portfolios but includes 'null' portfolios
AND SURVEY_ID = 'SV_cBggdZ7uWwWjmgl' -- Include only QA survey
AND UNIT_SAP_NUMBER NOT IN ('1', '4440', '33940') -- Removes test accounts
AND RESPONSE_VALID = 'Yes' -- Only valid responses
AND ISGOLDLISTACTIVE = TRUE -- Only active accounts
AND DATATYPE = 'Tickets' -- Only tickets
AND TICKET_STATUS = 'Closed' -- Only closed tickets
GROUP BY HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS, UNIT_SAP_NUMBER, YR, MO
ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS
)
-- Count of Closed Tickets from Failed Audits
, QA_M8 AS (
SELECT a.SCOTT_DAVIS_DIRECT_REPORTS,8 AS METRIC_ID, a.YR, a.MO, CASE WHEN SUM(b.CLOSED_TICKETS) IS NULL THEN 0 ELSE SUM(b.CLOSED_TICKETS) END AS STATISTIC
FROM (SELECT * FROM QA_BASE_FAIL_1 WHERE PASS_FAIL = 'FAIL') a
LEFT JOIN QA_BASE_TICKETS b
ON a.UNIT_SAP_NUMBER = b.UNIT_SAP_NUMBER
AND a.YR = b.YR
AND a.MO = b.MO
GROUP BY ALL
ORDER BY a.YR DESC, a.MO DESC, a.SCOTT_DAVIS_DIRECT_REPORTS
)


, QA_BASE_TICKETS_TIME AS (
SELECT HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS AS SCOTT_DAVIS_DIRECT_REPORTS,RESPONSE_ID, UNIT_SAP_NUMBER, YEAR(TICKET_CREATION_DATE_EST) AS YR, MONTH(TICKET_CREATION_DATE_EST) AS MO, TICKET_DAYS_TO_CLOSE
FROM FLIK_ANALYTICS.CURIOSITY.SURVEYS_COMBINED
WHERE (UNIT_BUSINESS_PORTFOLIO <> 'Test' or UNIT_BUSINESS_PORTFOLIO is null)  -- Excludes 'test' portfolios but includes 'null' portfolios
AND SURVEY_ID = 'SV_cBggdZ7uWwWjmgl' -- Include only QA survey
AND UNIT_SAP_NUMBER NOT IN ('1', '4440', '33940') -- Removes test accounts
AND RESPONSE_VALID = 'Yes' -- Only valid responses
AND ISGOLDLISTACTIVE = TRUE -- Only active accounts
AND DATATYPE = 'Tickets' -- Only tickets
AND TICKET_STATUS = 'Closed' -- Only closed tickets
ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS
)
-- Average Days to Closed Tickets from Failed Audits
, QA_M9 AS (
SELECT a.SCOTT_DAVIS_DIRECT_REPORTS,9 AS METRIC_ID, a.YR, a.MO, CASE WHEN ROUND(AVG(b.TICKET_DAYS_TO_CLOSE), 2) IS NULL THEN 0 ELSE ROUND(AVG(b.TICKET_DAYS_TO_CLOSE), 2) END AS STATISTIC
FROM (SELECT * FROM QA_BASE_FAIL_1 WHERE PASS_FAIL = 'FAIL') a
LEFT JOIN QA_BASE_TICKETS_TIME b
ON a.RESPONSE_ID = b.RESPONSE_ID
AND a.UNIT_SAP_NUMBER = b.UNIT_SAP_NUMBER
AND a.YR = b.YR
AND a.MO = b.MO
GROUP BY ALL
ORDER BY a.YR DESC, a.MO DESC, a.SCOTT_DAVIS_DIRECT_REPORTS
)

-- Count of Missed QA Questions from Failed Audits
, QA_M10_M11_M12 AS (
SELECT HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS AS SCOTT_DAVIS_DIRECT_REPORTS,
CASE WHEN FOLLOW_UP_QUESTION_RESPONSE LIKE '%(MINOR)%' THEN 10
WHEN FOLLOW_UP_QUESTION_RESPONSE LIKE '%(MAJOR)%' THEN 11
WHEN FOLLOW_UP_QUESTION_RESPONSE LIKE '%(CRITICAL)%' THEN 12
END AS METRIC_ID, YEAR(AUDIT_DATE) AS YR, MONTH(AUDIT_DATE) AS MO,
COUNT(METRIC_ID) AS STATISTIC
FROM FLIK_ANALYTICS.CURIOSITY.SURVEYS_COMBINED
WHERE (UNIT_BUSINESS_PORTFOLIO <> 'Test' or UNIT_BUSINESS_PORTFOLIO is null)  -- excludes 'test' portfolios but includes 'null' portfolios
AND SURVEY_ID = 'SV_cBggdZ7uWwWjmgl' -- Include only QA survey
AND UNIT_SAP_NUMBER NOT IN ('1', '4440', '33940') -- removes test B&I account & Insights test accounts
AND RESPONSE_ID IN (SELECT RESPONSE_ID FROM QA_BASE_FAIL_1 WHERE PASS_FAIL = 'FAIL') -- Only failed audits
AND RESPONSE_VALID = 'Yes' -- Only valid responses
AND DATATYPE = 'Responses' -- Only responses
AND QUESTION_TYPE = 'MC' -- Only multiple choice questions
AND METRIC_ID IS NOT NULL -- Only questions with (MINOR), (MAJOR), or (CRITICAL) in the response
AND ISGOLDLISTACTIVE = TRUE -- Only active accounts
AND QUESTION_TEXT <> 'Reason for selecting NO' -- Excludes the 'Reason for selecting NO' question
GROUP BY HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS, YR, MO, METRIC_ID
ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS, METRIC_ID
)

-- Count of Open Tickets By SDDR
, QA_M16 AS (
-- Purpose: This query is used to pull the count of open tickets for the QA team.
SELECT HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS AS SCOTT_DAVIS_DIRECT_REPORTS,16 AS METRIC_ID, YEAR(TICKET_CREATION_DATE_EST) AS YR, MONTH(TICKET_CREATION_DATE_EST) AS MO,
 COUNT(TICKET_ID) AS STATISTIC
FROM FLIK_ANALYTICS.CURIOSITY.SURVEYS_COMBINED 
WHERE (UNIT_BUSINESS_PORTFOLIO <> 'Test' or UNIT_BUSINESS_PORTFOLIO is null)  -- excludes 'test' portfolios but includes 'null' portfolios
AND SURVEY_ID = 'SV_cBggdZ7uWwWjmgl' -- include only QA survey
AND UNIT_SAP_NUMBER NOT IN ('1', '4440', '33940') -- removes test B&I account & Insights test accounts
AND RESPONSE_VALID = 'Yes' -- only valid responses
AND DATATYPE = 'Tickets' -- only tickets
AND TICKET_STATUS = 'Open' -- only open tickets
AND ISGOLDLISTACTIVE = TRUE -- only active accounts
AND SCOTT_DAVIS_DIRECT_REPORTS IS NOT NULL -- only non-null SDDR
AND SCOTT_DAVIS_DIRECT_REPORTS <> '' -- only non-blank SDDR
GROUP BY SCOTT_DAVIS_DIRECT_REPORTS, YR, MO
ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS
)


-- Description: This script is used to get the list of active VOC units that participated in LETS TALK FLIK

-- Get list of active VOC units that participated in LETS TALK FLIK
, BASE_VOC AS (
SELECT b.unit_name, b.ext_ref,a.PARTICIPATES_IN_LETS_TALK_FLIK, a.scott_davis_direct_reports
FROM FLIK_ANALYTICS.DIM.GOLDLIST a
RIGHT JOIN FLIK_INTERMEDIATE.FIVETRAN.INT_FLIK_FIVETRAN__GOLDLIST_ACTIVE_UNITS b
ON a.extref = b.ext_ref
WHERE lower(a.PARTICIPATES_IN_LETS_TALK_FLIK) NOT IN ('no', 'test')
AND b.ext_ref NOT IN ('1', '4440', '33940', '5')

-- Count of Monthly VOC Responses by SDDR/UNIT_SAP_NUMBER
), VOC_UNIT_RESPONSES AS (
SELECT HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS AS SCOTT_DAVIS_DIRECT_REPORTS, UNIT_SAP_NUMBER, YEAR(AUDIT_DATE) AS YR, MONTH(AUDIT_DATE) AS MO, COUNT(DISTINCT RESPONSE_ID) AS RESPONSE_COUNT
FROM FLIK_ANALYTICS.CURIOSITY.SURVEYS_COMBINED
WHERE (UNIT_BUSINESS_PORTFOLIO <> 'Test' OR UNIT_BUSINESS_PORTFOLIO is null)  -- removes test B&I account & Insights test accounts
AND DATATYPE = 'Responses' -- only responses
AND SURVEY_NAME ILIKE '%voc%' -- only VOC surveys
AND UNIT_SAP_NUMBER NOT IN ('1', '4440', '33940') -- removes test B&I account & Insights test accounts
AND RESPONSE_VALID = 'Yes' -- only valid responses
AND ISGOLDLISTACTIVE = TRUE -- only active units
AND UNIT_SAP_NUMBER IN (SELECT ext_ref FROM BASE_VOC) -- only units that participated in LETS TALK FLIK
AND HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS IS NOT NULL -- only responses with a SDDR
GROUP BY SCOTT_DAVIS_DIRECT_REPORTS, UNIT_SAP_NUMBER, YR, MO
ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS



-- Count of Monthly VOC Responses by SDDR
), VOC_M17 AS (
SELECT HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS AS SCOTT_DAVIS_DIRECT_REPORTS, 17 AS METRIC_ID, YEAR(AUDIT_DATE) AS YR, MONTH(AUDIT_DATE) AS MO, COUNT(DISTINCT RESPONSE_ID) AS STATISTIC
FROM FLIK_ANALYTICS.CURIOSITY.SURVEYS_COMBINED
WHERE (UNIT_BUSINESS_PORTFOLIO <> 'Test' OR UNIT_BUSINESS_PORTFOLIO is null)  -- removes test B&I account & Insights test accounts
AND DATATYPE = 'Responses' -- only responses
AND SURVEY_NAME ILIKE '%voc%' -- only VOC surveys
AND UNIT_SAP_NUMBER NOT IN ('1', '4440', '33940') -- removes test B&I account & Insights test accounts
AND RESPONSE_VALID = 'Yes' -- only valid responses
AND ISGOLDLISTACTIVE = TRUE -- only active units
AND UNIT_SAP_NUMBER IN (SELECT ext_ref FROM BASE_VOC) -- only units that participated in LETS TALK FLIK
AND HIERARCHY_SCOTT_DAVIS_DIRECT_REPORTS IS NOT NULL -- only responses with a SDDR
GROUP BY SCOTT_DAVIS_DIRECT_REPORTS, YR, MO
ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS
)

, CTE_AI AS (
SELECT a.RESPONSE_ID, a.QUESTION_TEXT, a.QUESTION_RESPONSE,  a.UNIT_SAP_NUMBER, b.UNIT_NAME, b.SCOTT_DAVIS_DIRECT_REPORTS, a.FULL_RECORDED_DATE, ROUND(AVG(a.SENTIMENT), 2) AS AVG_SENTIMENT, 
CASE WHEN AVG_SENTIMENT <= 2.33 AND AVG_SENTIMENT >= 1 THEN 'Negative'
WHEN AVG_SENTIMENT > 2.33 AND AVG_SENTIMENT < 3.67 THEN 'Neutral'
WHEN AVG_SENTIMENT <= 5 AND AVG_SENTIMENT >= 3.67 THEN 'Positive' 
END AS SENTIMENT_LABEL
FROM FLIK_INTERMEDIATE.DATA_SCIENCE.FLIK_DATA_SCIENCE__FLIK_VOC_COMMENTS_CATEGORIES a
LEFT JOIN BASE_VOC b
ON a.UNIT_SAP_NUMBER = b.EXT_REF
WHERE a.RESPONSE_ID IN (SELECT DISTINCT RESPONSE_ID FROM FLIK_ANALYTICS.CURIOSITY.SURVEYS_COMBINED WHERE RESPONSE_VALID = 'Yes' AND ISGOLDLISTACTIVE = TRUE)
GROUP BY  a.RESPONSE_ID, a.QUESTION_TEXT, a.QUESTION_RESPONSE,  a.UNIT_SAP_NUMBER, b.UNIT_NAME, b.SCOTT_DAVIS_DIRECT_REPORTS, a.FULL_RECORDED_DATE

-- Count of all AI Sentiment Comment by SDDR
), VOC_AI_M18 AS (
SELECT SCOTT_DAVIS_DIRECT_REPORTS, 18 AS METRIC_ID, YEAR(FULL_RECORDED_DATE) AS YR, MONTH(FULL_RECORDED_DATE) AS MO, COUNT(*) AS STATISTIC
FROM CTE_AI
WHERE SCOTT_DAVIS_DIRECT_REPORTS IS NOT NULL
GROUP BY SCOTT_DAVIS_DIRECT_REPORTS, YR, MO
ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS
)

-- Count of each AI Sentiment by SDDR
, VOC_AI_M19_M21 AS (
SELECT SCOTT_DAVIS_DIRECT_REPORTS, CASE WHEN SENTIMENT_LABEL = 'Negative' THEN 20
WHEN SENTIMENT_LABEL = 'Neutral' THEN 21
WHEN SENTIMENT_LABEL = 'Positive' THEN 19
END AS METRIC_ID, YEAR(FULL_RECORDED_DATE) AS YR, MONTH(FULL_RECORDED_DATE) AS MO, COUNT(*) AS STATISTIC
FROM CTE_AI
WHERE SCOTT_DAVIS_DIRECT_REPORTS IS NOT NULL
GROUP BY SCOTT_DAVIS_DIRECT_REPORTS, YR, MO, SENTIMENT_LABEL
ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS, METRIC_ID ASC
)
-- Percentage of each AI Sentiment by SDDR
, VOC_AI_M22_M24 AS (
SELECT SCOTT_DAVIS_DIRECT_REPORTS, CASE WHEN SENTIMENT_LABEL = 'Negative' THEN 23
WHEN SENTIMENT_LABEL = 'Neutral' THEN 24
WHEN SENTIMENT_LABEL = 'Positive' THEN 22
END AS METRIC_ID, YEAR(FULL_RECORDED_DATE) AS YR, MONTH(FULL_RECORDED_DATE) AS MO,
(COUNT(QUESTION_RESPONSE)) / SUM(COUNT( QUESTION_RESPONSE)) OVER (PARTITION BY SCOTT_DAVIS_DIRECT_REPORTS, YR, MO) AS STATISTIC
FROM CTE_AI
WHERE SCOTT_DAVIS_DIRECT_REPORTS IS NOT NULL
GROUP BY SCOTT_DAVIS_DIRECT_REPORTS, YR, MO, SENTIMENT_LABEL
ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS, METRIC_ID ASC
)

-- Top Categories Driving Negaive Comments - Top 3
, VOC_AI_M25_M27_BASE1 AS (
SELECT DISTINCT b.RESPONSE_ID, b.QUESTION_TEXT, b.QUESTION_RESPONSE, b.SCOTT_DAVIS_DIRECT_REPORTS, a.CATEGORY, b.YR, b.MO
FROM (SELECT RESPONSE_ID, QUESTION_TEXT, QUESTION_RESPONSE, SCOTT_DAVIS_DIRECT_REPORTS, UNIT_NAME, UNIT_SAP_NUMBER, YEAR(FULL_RECORDED_DATE) AS YR, MONTH(FULL_RECORDED_DATE) AS MO FROM CTE_AI WHERE SENTIMENT_LABEL = 'Negative') b
LEFT JOIN FLIK_INTERMEDIATE.DATA_SCIENCE.FLIK_DATA_SCIENCE__FLIK_VOC_COMMENTS_CATEGORIES a
ON a.RESPONSE_ID = b.RESPONSE_ID
AND a.QUESTION_TEXT = b.QUESTION_TEXT
AND a.QUESTION_RESPONSE = b.QUESTION_RESPONSE
ORDER BY b.RESPONSE_ID
)
, VOC_AI_M25_M27_BASE2 AS (
SELECT SCOTT_DAVIS_DIRECT_REPORTS, YR, MO, CATEGORY AS LABEL, COUNT(DISTINCT QUESTION_RESPONSE) AS STATISTIC, ROW_NUMBER() OVER (
        PARTITION BY SCOTT_DAVIS_DIRECT_REPORTS, YR, MO 
        ORDER BY STATISTIC DESC ) AS RANK
FROM VOC_AI_M25_M27_BASE1
GROUP BY SCOTT_DAVIS_DIRECT_REPORTS, YR, MO, CATEGORY
ORDER BY SCOTT_DAVIS_DIRECT_REPORTS, YR DESC, MO DESC, RANK
)
-- Top Categories Driving Negaive Comments - Rank 1-3
, VOC_AI_M25_M27 AS (
SELECT SCOTT_DAVIS_DIRECT_REPORTS, CASE WHEN RANK = 1 THEN 25
WHEN RANK = 2 THEN 26
WHEN RANK = 3 THEN 27
END AS METRIC_ID, YR, MO, STATISTIC, LABEL
FROM VOC_AI_M25_M27_BASE2
WHERE RANK <= 3
AND SCOTT_DAVIS_DIRECT_REPORTS IS NOT NULL
ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS, METRIC_ID ASC
)

, UNIT_LIST AS (
    SELECT DISTINCT ext_ref AS UNIT_SAP_NUMBER, UNIT_NAME
    FROM BASE_VOC
)

-- Updated: 9/30/2024
-----------------------------------------------------------------------------
, numbers1 AS (
SELECT 2019 as YR
UNION ALL
SELECT YR + 1
FROM numbers1
WHERE YR < YEAR(DATEADD('month', -1, CURRENT_DATE()))
)
, numbers2 AS (
SELECT 1 as MO
UNION ALL
SELECT MO + 1
FROM numbers2
WHERE MO < 12
)
, years_months AS (
SELECT YR, MO
FROM numbers1
CROSS JOIN numbers2
)


-- Use UNIT_LIST to get all the distinct UNIT_SAP_NUMBER that participated in LETS TALK FLIK
-- Use VOC_UNIT_RESPONSES to get the count of VOC responses by UNIT_SAP_NUMBER from each month & year
-- Use years_months to get all months from 2019 to 2024

-- Make sure years_months has a cross join with UNIT_LIST to get all the months for each UNIT_SAP_NUMBER
-- Then left join with VOC_UNIT_RESPONSES to get the count of VOC responses by UNIT_SAP_NUMBER from each month & year
-- Then use COALESCE to replace NULL values with 0

, CTE_HELPER1 AS (
SELECT *
FROM UNIT_LIST
CROSS JOIN years_months
)

, CTE_HELPER2 AS (
SELECT a.UNIT_NAME AS UNIT, a.UNIT_SAP_NUMBER, a.YR, a.MO, COALESCE(b.RESPONSE_COUNT, 0) AS RESPONSE_COUNT
FROM CTE_HELPER1 a
LEFT JOIN VOC_UNIT_RESPONSES b
ON a.UNIT_SAP_NUMBER = b.UNIT_SAP_NUMBER
AND a.YR = b.YR
AND a.MO = b.MO
ORDER BY a.UNIT_SAP_NUMBER, a.YR DESC, a.MO DESC
)
, CTE_UNIT_VOC_RESPONSES AS (
SELECT a.SCOTT_DAVIS_DIRECT_REPORTS, b.*
FROM BASE_VOC a
LEFT JOIN CTE_HELPER2 b
ON a.EXT_REF = b.UNIT_SAP_NUMBER
ORDER BY a.SCOTT_DAVIS_DIRECT_REPORTS, b.YR DESC, b.MO DESC, b.RESPONSE_COUNT DESC
)

-- Count of Units with VOC Responses less than 10 and more than 10
, VOC_M28_M29_BASE1 AS (

SELECT SCOTT_DAVIS_DIRECT_REPORTS,UNIT_SAP_NUMBER, YR, MO,RESPONSE_COUNT, CASE WHEN RESPONSE_COUNT < 10 THEN 1 ELSE 0 END AS LESS_THAN_10_VOC_RESPONSES
FROM CTE_UNIT_VOC_RESPONSES
WHERE SCOTT_DAVIS_DIRECT_REPORTS IS NOT NULL
ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS
)
, VOC_M28_M29_BASE2 AS (
SELECT SCOTT_DAVIS_DIRECT_REPORTS, YR, MO, LESS_THAN_10_VOC_RESPONSES, COUNT(*) AS STATISTIC
FROM VOC_M28_M29_BASE1
WHERE SCOTT_DAVIS_DIRECT_REPORTS IS NOT NULL
GROUP BY ROLLUP(SCOTT_DAVIS_DIRECT_REPORTS, YR, MO, LESS_THAN_10_VOC_RESPONSES)
HAVING YR IS NOT NULL AND MO IS NOT NULL
ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS
)
-- Count of Units with VOC Responses less than 10
, VOC_M28 AS (
SELECT SCOTT_DAVIS_DIRECT_REPORTS, 28 AS METRIC_ID, YR, MO, STATISTIC
FROM VOC_M28_M29_BASE2
WHERE LESS_THAN_10_VOC_RESPONSES = 1
)
-- Percentage of Units with VOC Responses less than 10
, VOC_M29 AS (
SELECT a.SCOTT_DAVIS_DIRECT_REPORTS, 29 AS METRIC_ID, a.YR, a.MO,  ROUND((a.STATISTIC / b.STATISTIC), 2) AS STATISTIC
FROM (SELECT * FROM VOC_M28_M29_BASE2 WHERE LESS_THAN_10_VOC_RESPONSES = 1) a
INNER JOIN (SELECT * FROM VOC_M28_M29_BASE2 WHERE LESS_THAN_10_VOC_RESPONSES IS NULL) b
ON a.SCOTT_DAVIS_DIRECT_REPORTS = b.SCOTT_DAVIS_DIRECT_REPORTS
AND a.YR = b.YR
AND a.MO = b.MO
ORDER BY  a.YR DESC, a.MO DESC, a.SCOTT_DAVIS_DIRECT_REPORTS
)
--------------------------------------------------------------------------
, CTE_VOC_UNION AS (
SELECT *
FROM VOC_M17
UNION ALL
SELECT *
FROM VOC_AI_M18
UNION ALL
SELECT *
FROM VOC_AI_M19_M21
UNION ALL
SELECT *
FROM VOC_AI_M22_M24
UNION ALL
SELECT *
FROM VOC_M28
UNION ALL
SELECT *
FROM VOC_M29
)

, CTE_VOC_UNION_WITH_LABELS AS (
SELECT *, NULL as LABEL
FROM CTE_VOC_UNION
UNION ALL
SELECT *
FROM VOC_AI_M25_M27
)

, CTE_QA_UNION AS (
SELECT *
FROM QA_M1
UNION ALL
SELECT *
FROM QA_M2
UNION ALL
SELECT *
FROM QA_M3
UNION ALL
SELECT *
FROM QA_M4_M5
UNION ALL
SELECT *
FROM QA_M6
UNION ALL
SELECT *
FROM QA_M7
UNION ALL
SELECT *
FROM QA_M8
UNION ALL
SELECT *
FROM QA_M9
UNION ALL
SELECT *
FROM QA_M10_M11_M12
UNION ALL
SELECT *
FROM QA_M13_M14_M15
UNION ALL
SELECT *
FROM QA_M16
)

, CTE_UNION_ALL AS (
SELECT *, NULL as LABEL
FROM CTE_QA_UNION
UNION ALL
SELECT *
FROM CTE_VOC_UNION_WITH_LABELS
)

, numbers AS (
SELECT 1 as METRIC_ID
UNION ALL
SELECT METRIC_ID + 1
FROM numbers
WHERE METRIC_ID < 54
)

, SDDR_REPORTS as (
    select distinct SCOTT_DAVIS_DIRECT_REPORTS, YR, MO
    from QA_M1
    where scott_davis_direct_reports is not null
    and scott_davis_direct_reports <> ''
    ORDER BY YR DESC, MO DESC, SCOTT_DAVIS_DIRECT_REPORTS
)

, SDDR_LIST as (
    select *
    from numbers
    cross join SDDR_REPORTS
)

, CTE_FINAL AS (
SELECT x.*, coalesce(y.statistic, 0) as STATISTIC, coalesce(y.label, NULL) AS LABEL
FROM SDDR_LIST x
LEFT JOIN CTE_UNION_ALL y
    ON x.METRIC_ID = y.METRIC_ID
    AND x.scott_davis_direct_reports = y.scott_davis_direct_reports
    AND x.yr = y.yr
    AND x.mo = y.mo
ORDER BY  x.YR DESC, x.MO DESC, x.SCOTT_DAVIS_DIRECT_REPORTS, x.METRIC_ID ASC
)

SELECT *
FROM CTE_FINAL
WHERE YR = YEAR(DATEADD('month', -1, CURRENT_DATE()))
AND MO = MONTH(DATEADD('month', -1, CURRENT_DATE()))
;